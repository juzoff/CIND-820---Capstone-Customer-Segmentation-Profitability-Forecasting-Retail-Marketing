{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNc7ced/TChqDkJYrtKNUfB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Importing Sampled Stratified csv File"],"metadata":{"id":"GFHcUSSaTpZZ"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"Kk8A9EVrTL1k","executionInfo":{"status":"ok","timestamp":1749231341857,"user_tz":240,"elapsed":890,"user":{"displayName":"Jivko Uzoff","userId":"13489242111202320155"}}},"outputs":[],"source":["from pandas import read_csv\n","import pandas as pd\n","\n","# Specify the encoding as detected ('ascii')\n","sampled_data = pd.read_csv('/content/Stratified_Sample.csv', encoding='ascii')  # Updated encoding to 'ascii'"]},{"cell_type":"markdown","source":["# Data Preprocessing"],"metadata":{"id":"P8LR0DjDTqJ3"}},{"cell_type":"markdown","source":["## Splitting into Training and Test Set using Sampled Dataset"],"metadata":{"id":"JHn6_RzNTyvp"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","# Assuming 'sampled_data' is your dataframe after sampling 20,000 rows\n","\n","# Split into train and test sets (e.g., 70% train, 30% test)\n","train_data, test_data = train_test_split(sampled_data, test_size=0.3, random_state=42, shuffle=True)\n","\n","print(f\"Training set size: {train_data.shape}\")\n","print(f\"Test set size: {test_data.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0dQpiWMyTvYo","executionInfo":{"status":"ok","timestamp":1749231347289,"user_tz":240,"elapsed":1178,"user":{"displayName":"Jivko Uzoff","userId":"13489242111202320155"}},"outputId":"92fff5ce-4650-444d-dbb6-906eb57c1081"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Training set size: (21000, 78)\n","Test set size: (9000, 78)\n"]}]},{"cell_type":"markdown","source":["## Feature Engineering"],"metadata":{"id":"RG8vmwNlUFPh"}},{"cell_type":"code","source":["#############################\n","\n","# Feature: Discount Sensitivity\n","train_data['discount_sensitivity'] = train_data['total_discounts_received'] / train_data['total_items_purchased']\n","test_data['discount_sensitivity'] = test_data['total_discounts_received'] / test_data['total_items_purchased']\n","\n","print(train_data[['customer_id', 'discount_sensitivity']].head())\n","'''\n","Indicates how much discount (in dollars) a customer receives per item purchased on average.\n","'''\n","\n","#############################\n","\n","# Feature: Average Discount Per Transaction\n","train_data['avg_discount_per_transaction'] = train_data['total_discounts_received'] / train_data['total_transactions']\n","test_data['avg_discount_per_transaction'] = test_data['total_discounts_received'] / test_data['total_transactions']\n","\n","print(train_data[['customer_id', 'avg_discount_per_transaction']].head())\n","'''\n","Indicates how much discount, on average, a customer gets per transaction.\n","Useful for analyzing price sensitivity and promotional effectiveness.\n","'''\n","\n","#############################\n","\n","# Feature: Average Transaction Value\n","train_data['avg_transaction_value'] = train_data['total_sales'] / train_data['total_transactions']\n","test_data['avg_transaction_value'] = test_data['total_sales'] / test_data['total_transactions']\n","\n","print(train_data[['customer_id', 'avg_transaction_value']].head())\n","'''\n","Provides insights into how much a customer spends on average per transaction.\n","Helps identify valuable customers.\n","'''\n","\n","#############################\n","\n","# Feature: High Value Purchase (based on avg_purchase_value)\n","high_value_threshold = train_data['avg_purchase_value'].quantile(0.75)\n","\n","train_data['high_value_purchase'] = train_data['avg_purchase_value'] > high_value_threshold\n","test_data['high_value_purchase'] = test_data['avg_purchase_value'] > high_value_threshold\n","\n","print(train_data[['customer_id', 'avg_purchase_value', 'high_value_purchase']].head())\n","'''\n","Customers with average purchase value above 75th percentile are marked as high-value purchasers.\n","'''\n","\n","#############################\n","\n","# Feature: High Value Quantity (based on quantity)\n","quantity_threshold = train_data['quantity'].quantile(0.75)\n","\n","train_data['high_value_quantity'] = train_data['quantity'] > quantity_threshold\n","test_data['high_value_quantity'] = test_data['quantity'] > quantity_threshold\n","\n","print(train_data[['customer_id', 'quantity', 'high_value_quantity']].head())\n","'''\n","Flags transactions where quantity is above 75th percentile.\n","Can identify bulk buyers.\n","'''\n","\n","#############################\n","\n","# Feature: Customer Lifetime Value (CLV)\n","train_data['CLV'] = train_data.groupby('customer_id')['total_sales'].transform('sum')\n","test_data['CLV'] = test_data.groupby('customer_id')['total_sales'].transform('sum')\n","\n","print(train_data[['customer_id', 'CLV']].head())\n","'''\n","Total revenue a customer generates across their lifetime.\n","Useful for prioritizing marketing efforts.\n","'''\n","\n","#############################\n","\n","# Feature: Total Return Rate\n","train_data['total_return_rate'] = train_data['total_returned_items'] / train_data['total_items_purchased']\n","test_data['total_return_rate'] = test_data['total_returned_items'] / test_data['total_items_purchased']\n","\n","print(train_data[['customer_id', 'total_return_rate']].head())\n","'''\n","Percentage of items returned vs purchased.\n","High return rate may indicate dissatisfaction or quality issues.\n","'''\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":796},"id":"dX8CdqPcT4Yd","executionInfo":{"status":"ok","timestamp":1749231374281,"user_tz":240,"elapsed":91,"user":{"displayName":"Jivko Uzoff","userId":"13489242111202320155"}},"outputId":"446bc228-0f64-46a0-b51f-37dc4df5a35a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["       customer_id  discount_sensitivity\n","28465       390174              0.003344\n","27622        70390             26.016897\n","28376       815034              2.252160\n","10917       958323              3.143571\n","27234       737817            318.400000\n","       customer_id  avg_discount_per_transaction\n","28465       390174                      0.040000\n","27622        70390                     16.766444\n","28376       815034                     12.710822\n","10917       958323                      7.423373\n","27234       737817                     73.476923\n","       customer_id  avg_transaction_value\n","28465       390174             156.661154\n","27622        70390             161.982222\n","28376       815034             102.076575\n","10917       958323              84.639157\n","27234       737817             523.980000\n","       customer_id  avg_purchase_value  high_value_purchase\n","28465       390174              244.82                False\n","27622        70390              400.11                 True\n","28376       815034              376.45                False\n","10917       958323               42.65                False\n","27234       737817              132.84                False\n","       customer_id  quantity  high_value_quantity\n","28465       390174         9                 True\n","27622        70390         1                False\n","28376       815034         7                False\n","10917       958323         1                False\n","27234       737817         4                False\n","       customer_id      CLV\n","28465       390174  4073.19\n","27622        70390  7289.20\n","28376       815034  7451.59\n","10917       958323  7025.05\n","27234       737817  6811.74\n","       customer_id  total_return_rate\n","28465       390174           0.028939\n","27622        70390           0.000000\n","28376       815034           0.002427\n","10917       958323           0.045918\n","27234       737817           2.666667\n"]},{"output_type":"execute_result","data":{"text/plain":["'\\nPercentage of items returned vs purchased.\\nHigh return rate may indicate dissatisfaction or quality issues.\\n'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["## Date Binning / Feature Extraction from Datetime Data"],"metadata":{"id":"A6Ia49xdULX-"}},{"cell_type":"code","source":["# Date Binning/Feature Extraction for train_data\n","train_data['transaction_month'] = pd.to_datetime(train_data['transaction_date']).dt.month\n","train_data['transaction_year'] = pd.to_datetime(train_data['transaction_date']).dt.year\n","# Extracts the month and year from the transaction date for trend analysis\n","\n","train_data['product_expiry_date_month'] = pd.to_datetime(train_data['product_expiry_date']).dt.month\n","train_data['product_expiry_date_year'] = pd.to_datetime(train_data['product_expiry_date']).dt.year\n","# Converts product expiry date into month and year for expiration trends\n","\n","train_data['product_manufacture_month'] = pd.to_datetime(train_data['product_manufacture_date']).dt.month\n","train_data['product_manufacture_year'] = pd.to_datetime(train_data['product_manufacture_date']).dt.year\n","# Extracts manufacturing month and year for production timeline analysis\n","\n","train_data['promotion_end_month'] = pd.to_datetime(train_data['promotion_end_date']).dt.month\n","train_data['promotion_end_year'] = pd.to_datetime(train_data['promotion_end_date']).dt.year\n","# Converts promotion end date into month and year for promotion end analysis\n","\n","train_data['last_purchase_month'] = pd.to_datetime(train_data['last_purchase_date']).dt.month\n","train_data['last_purchase_year'] = pd.to_datetime(train_data['last_purchase_date']).dt.year\n","# Extracts last purchase month and year for customer purchase behavior\n","\n","train_data['promotion_start_month'] = pd.to_datetime(train_data['promotion_start_date']).dt.month\n","train_data['promotion_start_year'] = pd.to_datetime(train_data['promotion_start_date']).dt.year\n","# Converts promotion start date into month and year for promotional activity timing\n","\n","# Date Binning/Feature Extraction for test_data\n","test_data['transaction_month'] = pd.to_datetime(test_data['transaction_date']).dt.month\n","test_data['transaction_year'] = pd.to_datetime(test_data['transaction_date']).dt.year\n","# Extracts the month and year from the transaction date for trend analysis\n","\n","test_data['product_expiry_date_month'] = pd.to_datetime(test_data['product_expiry_date']).dt.month\n","test_data['product_expiry_date_year'] = pd.to_datetime(test_data['product_expiry_date']).dt.year\n","# Converts product expiry date into month and year for expiration trends\n","\n","test_data['product_manufacture_month'] = pd.to_datetime(test_data['product_manufacture_date']).dt.month\n","test_data['product_manufacture_year'] = pd.to_datetime(test_data['product_manufacture_date']).dt.year\n","# Extracts manufacturing month and year for production timeline analysis\n","\n","test_data['promotion_end_month'] = pd.to_datetime(test_data['promotion_end_date']).dt.month\n","test_data['promotion_end_year'] = pd.to_datetime(test_data['promotion_end_date']).dt.year\n","# Converts promotion end date into month and year for promotion end analysis\n","\n","test_data['last_purchase_month'] = pd.to_datetime(test_data['last_purchase_date']).dt.month\n","test_data['last_purchase_year'] = pd.to_datetime(test_data['last_purchase_date']).dt.year\n","# Extracts last purchase month and year for customer purchase behavior\n","\n","test_data['promotion_start_month'] = pd.to_datetime(test_data['promotion_start_date']).dt.month\n","test_data['promotion_start_year'] = pd.to_datetime(test_data['promotion_start_date']).dt.year\n","# Converts promotion start date into month and year for promotional activity timing\n","\n","# Define columns to drop\n","date_columns_to_drop = [\n","    'transaction_date',\n","    'product_expiry_date',\n","    'product_manufacture_date',\n","    'promotion_end_date',\n","    'last_purchase_date',\n","    'promotion_start_date'\n","]\n","\n","# Drop original date columns from train_data and test_data\n","train_data = train_data.drop(columns=date_columns_to_drop)\n","test_data = test_data.drop(columns=date_columns_to_drop)\n","\n","# Verify columns after dropping original dates\n","print(\"Train data columns after dropping original dates:\")\n","print(train_data.columns.tolist())\n","print(\"\\nTest data columns after dropping original dates:\")\n","print(test_data.columns.tolist())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uAsOOmRFUL_8","executionInfo":{"status":"ok","timestamp":1749231419954,"user_tz":240,"elapsed":260,"user":{"displayName":"Jivko Uzoff","userId":"13489242111202320155"}},"outputId":"70c2ae2c-48e2-4531-efbf-6597235d4506"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data columns after dropping original dates:\n","['customer_id', 'age', 'gender', 'income_bracket', 'loyalty_program', 'membership_years', 'churned', 'marital_status', 'number_of_children', 'education_level', 'occupation', 'transaction_id', 'product_id', 'product_category', 'quantity', 'unit_price', 'discount_applied', 'payment_method', 'store_location', 'transaction_hour', 'day_of_week', 'week_of_year', 'month_of_year', 'avg_purchase_value', 'purchase_frequency', 'avg_discount_used', 'preferred_store', 'online_purchases', 'in_store_purchases', 'avg_items_per_transaction', 'avg_transaction_value', 'total_returned_items', 'total_returned_value', 'total_sales', 'total_transactions', 'total_items_purchased', 'total_discounts_received', 'avg_spent_per_category', 'max_single_purchase_value', 'min_single_purchase_value', 'product_name', 'product_brand', 'product_rating', 'product_review_count', 'product_stock', 'product_return_rate', 'product_size', 'product_weight', 'product_color', 'product_material', 'product_shelf_life', 'promotion_id', 'promotion_type', 'promotion_effectiveness', 'promotion_channel', 'promotion_target_audience', 'customer_zip_code', 'customer_city', 'customer_state', 'store_zip_code', 'store_city', 'store_state', 'distance_to_store', 'holiday_season', 'season', 'weekend', 'customer_support_calls', 'email_subscriptions', 'app_usage', 'website_visits', 'social_media_engagement', 'days_since_last_purchase', 'discount_sensitivity', 'avg_discount_per_transaction', 'high_value_purchase', 'high_value_quantity', 'CLV', 'total_return_rate', 'transaction_month', 'transaction_year', 'product_expiry_date_month', 'product_expiry_date_year', 'product_manufacture_month', 'product_manufacture_year', 'promotion_end_month', 'promotion_end_year', 'last_purchase_month', 'last_purchase_year', 'promotion_start_month', 'promotion_start_year']\n","\n","Test data columns after dropping original dates:\n","['customer_id', 'age', 'gender', 'income_bracket', 'loyalty_program', 'membership_years', 'churned', 'marital_status', 'number_of_children', 'education_level', 'occupation', 'transaction_id', 'product_id', 'product_category', 'quantity', 'unit_price', 'discount_applied', 'payment_method', 'store_location', 'transaction_hour', 'day_of_week', 'week_of_year', 'month_of_year', 'avg_purchase_value', 'purchase_frequency', 'avg_discount_used', 'preferred_store', 'online_purchases', 'in_store_purchases', 'avg_items_per_transaction', 'avg_transaction_value', 'total_returned_items', 'total_returned_value', 'total_sales', 'total_transactions', 'total_items_purchased', 'total_discounts_received', 'avg_spent_per_category', 'max_single_purchase_value', 'min_single_purchase_value', 'product_name', 'product_brand', 'product_rating', 'product_review_count', 'product_stock', 'product_return_rate', 'product_size', 'product_weight', 'product_color', 'product_material', 'product_shelf_life', 'promotion_id', 'promotion_type', 'promotion_effectiveness', 'promotion_channel', 'promotion_target_audience', 'customer_zip_code', 'customer_city', 'customer_state', 'store_zip_code', 'store_city', 'store_state', 'distance_to_store', 'holiday_season', 'season', 'weekend', 'customer_support_calls', 'email_subscriptions', 'app_usage', 'website_visits', 'social_media_engagement', 'days_since_last_purchase', 'discount_sensitivity', 'avg_discount_per_transaction', 'high_value_purchase', 'high_value_quantity', 'CLV', 'total_return_rate', 'transaction_month', 'transaction_year', 'product_expiry_date_month', 'product_expiry_date_year', 'product_manufacture_month', 'product_manufacture_year', 'promotion_end_month', 'promotion_end_year', 'last_purchase_month', 'last_purchase_year', 'promotion_start_month', 'promotion_start_year']\n"]}]},{"cell_type":"markdown","source":["## Unusual Outliers Check"],"metadata":{"id":"4joTJsRcUOTW"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","# Set pandas options to display all columns\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.max_rows', None)\n","\n","# Function to detect outliers using IQR\n","def detect_outliers_iqr(data):\n","    numerical_cols = data.select_dtypes(include=np.number).columns\n","    outliers_iqr = {}\n","\n","    for col in numerical_cols:\n","        Q1 = data[col].quantile(0.25)\n","        Q3 = data[col].quantile(0.75)\n","        IQR = Q3 - Q1\n","\n","        lower_bound = Q1 - 1.5 * IQR\n","        upper_bound = Q3 + 1.5 * IQR\n","\n","        outliers = data[(data[col] < lower_bound) | (data[col] > upper_bound)][col]\n","        outliers_iqr[col] = {\n","            'count': len(outliers),\n","            'percentage': (len(outliers) / len(data)) * 100,\n","            'outlier_values': outliers.values\n","        }\n","\n","    return outliers_iqr\n","\n","#############################\n","\n","# Detect and print outliers in TRAINING SET\n","print(\"\\n=== Outliers (IQR Method) – Train Data ===\")\n","outliers_iqr_train = detect_outliers_iqr(train_data)\n","\n","for col, info in outliers_iqr_train.items():\n","    print(f\"\\nColumn: {col}\")\n","    print(f\"Number of outliers: {info['count']}\")\n","    print(f\"Percentage of outliers: {info['percentage']:.2f}%\")\n","    if info['count'] > 0:\n","        print(f\"Outlier values: {info['outlier_values'][:10]}\")  # Show first 10\n","\n","#############################\n","\n","# Detect and print outliers in TEST SET\n","print(\"\\n=== Outliers (IQR Method) – Test Data ===\")\n","outliers_iqr_test = detect_outliers_iqr(test_data)\n","\n","for col, info in outliers_iqr_test.items():\n","    print(f\"\\nColumn: {col}\")\n","    print(f\"Number of outliers: {info['count']}\")\n","    print(f\"Percentage of outliers: {info['percentage']:.2f}%\")\n","    if info['count'] > 0:\n","        print(f\"Outlier values: {info['outlier_values'][:10]}\")  # Show first 10\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bXIBqcEvUQRd","executionInfo":{"status":"ok","timestamp":1749231429688,"user_tz":240,"elapsed":339,"user":{"displayName":"Jivko Uzoff","userId":"13489242111202320155"}},"outputId":"57d1b4ad-8096-43b2-b4f5-5b5dd811879f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","=== Outliers (IQR Method) – Train Data ===\n","\n","Column: customer_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: age\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: membership_years\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: number_of_children\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: transaction_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: quantity\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: unit_price\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: discount_applied\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: transaction_hour\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: week_of_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: month_of_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_purchase_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_discount_used\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: online_purchases\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: in_store_purchases\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_items_per_transaction\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_transaction_value\n","Number of outliers: 2441\n","Percentage of outliers: 11.62%\n","Outlier values: [ 523.98       1212.26        757.56833333  467.47882353 2312.95\n"," 2470.81        813.956       968.55333333  755.61        563.48083333]\n","\n","Column: total_returned_items\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_returned_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_sales\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_transactions\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_items_purchased\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_discounts_received\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_spent_per_category\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: max_single_purchase_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: min_single_purchase_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_rating\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_review_count\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_stock\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_return_rate\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_weight\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_shelf_life\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: customer_zip_code\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: store_zip_code\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: distance_to_store\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: customer_support_calls\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: website_visits\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: days_since_last_purchase\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: discount_sensitivity\n","Number of outliers: 2417\n","Percentage of outliers: 11.51%\n","Outlier values: [ 26.01689655 318.4         10.64067797   9.14714286   8.61728395\n","  15.1045       9.13511364  24.435       16.56071429   8.37939024]\n","\n","Column: avg_discount_per_transaction\n","Number of outliers: 2406\n","Percentage of outliers: 11.46%\n","Outlier values: [ 73.47692308  67.45166667  45.59588235 210.8125      54.06\n"," 331.84666667 674.2         65.50083333  43.47166667  62.474     ]\n","\n","Column: CLV\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_return_rate\n","Number of outliers: 2424\n","Percentage of outliers: 11.54%\n","Outlier values: [2.66666667 0.125      0.10344828 0.14814815 0.42857143 0.66666667\n"," 0.09876543 0.1        0.07954545 0.125     ]\n","\n","Column: transaction_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: transaction_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_expiry_date_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_expiry_date_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_manufacture_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_manufacture_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_end_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_end_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: last_purchase_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: last_purchase_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_start_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_start_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","=== Outliers (IQR Method) – Test Data ===\n","\n","Column: customer_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: age\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: membership_years\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: number_of_children\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: transaction_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: quantity\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: unit_price\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: discount_applied\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: transaction_hour\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: week_of_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: month_of_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_purchase_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_discount_used\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: online_purchases\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: in_store_purchases\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_items_per_transaction\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_transaction_value\n","Number of outliers: 1032\n","Percentage of outliers: 11.47%\n","Outlier values: [ 823.175      2773.375       490.54533333 1043.8         915.88285714\n"," 2846.74       2977.29        932.52        834.515      1596.95333333]\n","\n","Column: total_returned_items\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_returned_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_sales\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_transactions\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_items_purchased\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_discounts_received\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: avg_spent_per_category\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: max_single_purchase_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: min_single_purchase_value\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_rating\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_review_count\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_stock\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_return_rate\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_weight\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_shelf_life\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_id\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: customer_zip_code\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: store_zip_code\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: distance_to_store\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: customer_support_calls\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: website_visits\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: days_since_last_purchase\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: discount_sensitivity\n","Number of outliers: 1031\n","Percentage of outliers: 11.46%\n","Outlier values: [146.516       11.99453125  58.47117647  34.52625      8.44727273\n","  34.16727273  15.0575      14.26363636  11.36416667  12.49111111]\n","\n","Column: avg_discount_per_transaction\n","Number of outliers: 1031\n","Percentage of outliers: 11.46%\n","Outlier values: [497.005      426.          44.52533333  46.17411765  57.93833333\n"," 262.72        67.6         46.1        115.785       47.161     ]\n","\n","Column: CLV\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: total_return_rate\n","Number of outliers: 1064\n","Percentage of outliers: 11.82%\n","Outlier values: [0.4        0.3125     0.20930233 0.15909091 0.81818182 0.08256881\n"," 0.1875     6.         0.31034483 0.10465116]\n","\n","Column: transaction_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: transaction_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_expiry_date_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_expiry_date_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_manufacture_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: product_manufacture_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_end_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_end_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: last_purchase_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: last_purchase_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_start_month\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n","\n","Column: promotion_start_year\n","Number of outliers: 0\n","Percentage of outliers: 0.00%\n"]}]},{"cell_type":"code","source":["#discount_sensitivity\n","\n","'''\n","The original discount_sensitivity formula (total_discounts_received / total_items_purchased), which produces outliers like 79.81, 25.62, and 17.40, could be explained by customers receiving massive discounts during huge sales events (e.g., Black Friday, clearance sales, or bulk promotions), where high total_discounts_received values are divided by relatively low total_items_purchased, resulting in an inflated average discount per item.\n","'''"],"metadata":{"id":"1An7P-FPUgSw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# avg_transaction_value\n","\n","'''\n","The extreme outliers in avg_transaction_value (e.g., 1518.80, 1177.00, 924.93), flagged as 11.54% of the data, can be explained by customers purchasing high-valued products (e.g., luxury goods, electronics, or bulk orders), where even a single transaction significantly exceeds typical purchase amounts. This naturally results in higher avg_transaction_value, contributing to the skewed distribution and emphasizing the disparity between standard and high-end purchasing behaviors.\n","'''"],"metadata":{"id":"8kRloOEcVX_Q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#avg_discount_per_transaction\n","\n","'''\n","The extreme outliers in avg_discount_per_transaction (e.g., 872.87, 177.08), flagged as 11.57% of the data, can be explained by customers purchasing high-valued products (e.g., luxury goods, electronics, or bulk orders), where even a moderate discount percentage (e.g., 10–20%) applied to a high avg_transaction_value (e.g., $8,000) results in a large absolute discount per transaction, inflating the average and contributing to the skewed distribution\n","'''"],"metadata":{"id":"yvdtaQ5wUg2s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#total_return_rate\n","\n","'''\n","The unusual outliers in total_return_rate, with 2,231 outliers (11.15%) and values like 0.42 (42%), 0.22 (22%), 0.18 (18%), 0.15 (15%), and 0.11 (11%), can be explained by customers returning items at a larger rate due to factors such as purchasing defective products, exploiting lenient return policies, or engaging in high-risk buying behaviors (e.g., buying multiple items to try and return), leading to elevated return rates that skew the distribution and produce a high percentage of outliers.\n","'''"],"metadata":{"id":"HdZFnWHaUirr"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e4d7fabc","executionInfo":{"status":"ok","timestamp":1749231739466,"user_tz":240,"elapsed":11594,"user":{"displayName":"Jivko Uzoff","userId":"13489242111202320155"}},"outputId":"3b8bf524-4e0d-4400-a3fe-eab433041d64"},"source":["# Save train_data and test_data to CSV files\n","train_data.to_csv('Stratified_train_data.csv', index=False)\n","test_data.to_csv('Stratified_test_data.csv', index=False)\n","\n","print(\"Train data saved to 'Stratified_train_data.csv'\")\n","print(\"Test data saved to 'Stratified_test_data.csv'\")"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Train data saved to 'Stratified_train_data.csv'\n","Test data saved to 'Stratified_test_data.csv'\n"]}]}]}